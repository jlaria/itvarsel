beta = c(1,2,0,5,-2,3, rep(0,395))
beta = c(1,2,0,5,-2,3, rep(0,394))
source("minarConjuntos.R")
source("cluster_methods.R")
X = matrix(rnorm(100*400), nrow = 100)
y = X%*%beta
var(y)
sd(y)
y = y + rnorm(100, mean = 0, sd = 3)
data.train = list(x=X, y=y)
results = minarConjuntos(data.train, 150, verbose = T)
library(foreach)
results = minarConjuntos(data.train, 150, verbose = T)
eta = X%*%beta
eta = X%*%beta
p = exp(eta)/(1+exp(eta))
y = rbinom(length(p),1, p)
data.train = list(x=X, y=y)
results = minarConjuntos(data.train, 150, verbose = T)
save.image("save.RData")
delta = max(mean(data.train$y), 1-mean(data.train$y))
incidencias = getIncidencias(result, delta, 400)
incidencias = getIncidencias(results, delta, 400)
incidencias
library(ggplot2)
ggplot()+
aes(x = 1:20, y = sort(incidencias, decreasing = T)[1:20])+
geom_point()+
geom_line()
sind = (beta!=0)[order(incidencias, decreasing = T)[1:20]]
sind
sind = factor((beta!=0)[order(incidencias, decreasing = T)[1:20]])
ggplot()+
aes(x = 1:20, y = sinc, color = sind)+
geom_point()+
geom_line()
sinc = sort(incidencias, decreasing = T)[1:20]
sind = factor((beta!=0)[order(incidencias, decreasing = T)[1:20]])
ggplot()+
aes(x = 1:20, y = sinc, color = sind)+
geom_point()+
geom_line()
ggplot()+
aes(x = 1:20, y = sinc)+
geom_point(color = sind)+
geom_line()
ggplot()+
aes(x = 1:20, y = sinc)+
geom_point(aes(color = sind))+
geom_line()
ggplot()+
aes(x = 1:20, y = sinc)+
geom_point(aes(color = sind))+
geom_line(linetype = "dotted")
levels(sind)
sinc = sort(incidencias, decreasing = T)[1:20]
sind = factor((beta!=0)[order(incidencias, decreasing = T)[1:20]])
levels(sind) = c("No", "Yes")
ggplot()+
aes(x = 1:20, y = sinc)+
geom_point(aes(color = sind))+
geom_line(linetype = "dotted")+
labs(x = "j", y = expression("sorted importance index "*I[(j)]))
ggplot()+
aes(x = 1:20, y = sinc)+
geom_point(aes(color = sind))+
geom_line(linetype = "dotted")+
labs(x = "j", y = expression("sorted importance index "*I[(j)]),
color = "In the generating model?")
ggplot()+
aes(x = 1:20, y = sinc)+
geom_point(aes(color = sind))+
geom_line(linetype = "dotted")+
labs(x = "j", y = expression("sorted importance index "*I[(j)]),
color = "Generating model")
ggplot()+
aes(x = 1:20, y = sinc)+
geom_point(aes(color = sind))+
geom_line(linetype = "dashed")+
labs(x = "j", y = expression("sorted importance index "*I[(j)]),
color = "Generating model")+
theme_minimal()
ggplot()+
aes(x = 1:20, y = sinc)+
geom_point(aes(color = sind))+
geom_line(linetype = "dashed")+
labs(x = "j", y = expression("sorted importance index "*I[(j)]),
color = "Generating model")+
scale_color_brewer("Reds")
ggplot()+
aes(x = 1:20, y = sinc)+
geom_point(aes(color = sind))+
geom_line(linetype = "dashed")+
labs(x = "j", y = expression("sorted importance index "*I[(j)]),
color = "Generating model")+
scale_color_brewer("Reds")+
theme_minimal()
ggplot()+
aes(x = 1:20, y = sinc)+
geom_point(aes(color = sind))+
geom_line(linetype = "dashed")+
labs(x = "j", y = expression("sorted importance index "*I[(j)]),
color = "Generating model")+
theme_minimal()
ggplot()+
aes(x = 1:20, y = sinc)+
geom_point(aes(color = sind))+
geom_line(linetype = "dashed")+
labs(x = expression(j), y = expression("sorted importance index "*I[(j)]),
color = "Generating model")+
theme_minimal()
ggplot()+
aes(x = 1:20, y = sinc)+
geom_point(aes(color = sind, shape = sind))+
geom_line(linetype = "dashed")+
labs(x = expression(j), y = expression("sorted importance index "*I[(j)]),
color = "Generating model")+
theme_minimal()
ggplot()+
aes(x = 1:20, y = sinc, group = sind)+
geom_point(aes(color = sind, shape = sind))+
geom_line(linetype = "dashed")+
labs(x = expression(j), y = expression("sorted importance index "*I[(j)]),
color = "Generating model")+
theme_minimal()
ggplot()+
aes(x = 1:20, y = sinc)+
geom_point(aes(color = sind, shape = sind))+
geom_line(linetype = "dashed")+
labs(x = expression(j), y = expression("sorted importance index "*I[(j)]))+
theme_minimal()
ggplot()+
aes(x = 1:20, y = sinc)+
geom_point(aes(color = sind, shape = sind))+
geom_line(linetype = "dashed")+
labs(x = expression(j), y = expression("sorted importance index "*I[(j)]),
sind = "Generating model")+
theme_minimal()
sind
ggplot()+
aes(x = 1:20, y = sinc)+
geom_point(aes(color = sind, shape = sind), size = 1)+
geom_line(linetype = "dashed")+
labs(x = expression(j), y = expression("sorted importance index "*I[(j)]))+
theme_minimal()
ggplot()+
aes(x = 1:20, y = sinc)+
geom_point(aes(color = sind, shape = sind), size = 5)+
geom_line(linetype = "dashed")+
labs(x = expression(j), y = expression("sorted importance index "*I[(j)]))+
theme_minimal()
ggplot()+
aes(x = 1:20, y = sinc)+
geom_point(aes(color = sind, shape = sind), size = 5)+
geom_line(linetype = "dashed")+
labs(x = expression(j), y = expression("sorted importance index "*I[(j)]), color = "G", shape= "G")+
theme_minimal()
ggplot()+
aes(x = 1:20, y = sinc)+
geom_point(aes(color = sind, shape = sind), size = 5)+
geom_line(linetype = "dashed")+
labs(x = expression(j), y = expression("sorted importance index "*I[(j)]),
color = "Generating model?", shape= "Generating model?")+
theme_minimal()
ggplot()+
aes(x = 1:20, y = sinc)+
geom_point(aes(color = sind, shape = sind), size = 3)+
geom_line(linetype = "dashed")+
labs(x = expression(j), y = expression("sorted importance index "*I[(j)]),
color = "Generating model?", shape= "Generating model?")+
theme_minimal()
ggplot()+
aes(x = 1:20, y = sinc)+
geom_point(aes(color = sind, shape = sind), size = 2)+
geom_line(linetype = "dashed")+
labs(x = expression(j), y = expression("sorted importance index "*I[(j)]),
color = "Generating model?", shape= "Generating model?")+
theme_minimal()
ggplot()+
aes(x = 1:20, y = sinc)+
geom_point(aes(color = sind, shape = sind), size = 3)+
geom_line(linetype = "dashed")+
labs(x = expression(j), y = expression("sorted importance index "*I[(j)]),
color = "Generating model?", shape= "Generating model?")+
theme_minimal()
ggplot()+
aes(x = 1:20, y = sinc)+
geom_point(aes(color = sind, shape = sind), size = 3)+
geom_line(linetype = "dashed")+
labs(x = expression("Variable index (sorted by importance "*I[j]*")"),
y = expression("Importance "*(I[j])),
color = "Generating model?", shape= "Generating model?")+
theme_minimal()
graphics.off()
for (i in 1:50){
plot(1:i)
#add something here that requests mouse click to proceed
}
for (i in 1:5000){
plot(1:i)
#add something here that requests mouse click to proceed
}
kmeans()
kmeans
?kmeans
