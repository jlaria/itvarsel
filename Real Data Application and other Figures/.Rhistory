beta = c(1,2,0,5,-2,3, rep(0,395))
beta = c(1,2,0,5,-2,3, rep(0,394))
source("minarConjuntos.R")
source("cluster_methods.R")
X = matrix(rnorm(100*400), nrow = 100)
y = X%*%beta
var(y)
sd(y)
y = y + rnorm(100, mean = 0, sd = 3)
data.train = list(x=X, y=y)
results = minarConjuntos(data.train, 150, verbose = T)
library(foreach)
results = minarConjuntos(data.train, 150, verbose = T)
eta = X%*%beta
eta = X%*%beta
p = exp(eta)/(1+exp(eta))
y = rbinom(length(p),1, p)
data.train = list(x=X, y=y)
results = minarConjuntos(data.train, 150, verbose = T)
save.image("save.RData")
delta = max(mean(data.train$y), 1-mean(data.train$y))
incidencias = getIncidencias(result, delta, 400)
incidencias = getIncidencias(results, delta, 400)
incidencias
library(ggplot2)
ggplot()+
aes(x = 1:20, y = sort(incidencias, decreasing = T)[1:20])+
geom_point()+
geom_line()
sind = (beta!=0)[order(incidencias, decreasing = T)[1:20]]
sind
sind = factor((beta!=0)[order(incidencias, decreasing = T)[1:20]])
ggplot()+
aes(x = 1:20, y = sinc, color = sind)+
geom_point()+
geom_line()
sinc = sort(incidencias, decreasing = T)[1:20]
sind = factor((beta!=0)[order(incidencias, decreasing = T)[1:20]])
ggplot()+
aes(x = 1:20, y = sinc, color = sind)+
geom_point()+
geom_line()
ggplot()+
aes(x = 1:20, y = sinc)+
geom_point(color = sind)+
geom_line()
ggplot()+
aes(x = 1:20, y = sinc)+
geom_point(aes(color = sind))+
geom_line()
ggplot()+
aes(x = 1:20, y = sinc)+
geom_point(aes(color = sind))+
geom_line(linetype = "dotted")
levels(sind)
sinc = sort(incidencias, decreasing = T)[1:20]
sind = factor((beta!=0)[order(incidencias, decreasing = T)[1:20]])
levels(sind) = c("No", "Yes")
ggplot()+
aes(x = 1:20, y = sinc)+
geom_point(aes(color = sind))+
geom_line(linetype = "dotted")+
labs(x = "j", y = expression("sorted importance index "*I[(j)]))
ggplot()+
aes(x = 1:20, y = sinc)+
geom_point(aes(color = sind))+
geom_line(linetype = "dotted")+
labs(x = "j", y = expression("sorted importance index "*I[(j)]),
color = "In the generating model?")
ggplot()+
aes(x = 1:20, y = sinc)+
geom_point(aes(color = sind))+
geom_line(linetype = "dotted")+
labs(x = "j", y = expression("sorted importance index "*I[(j)]),
color = "Generating model")
ggplot()+
aes(x = 1:20, y = sinc)+
geom_point(aes(color = sind))+
geom_line(linetype = "dashed")+
labs(x = "j", y = expression("sorted importance index "*I[(j)]),
color = "Generating model")+
theme_minimal()
ggplot()+
aes(x = 1:20, y = sinc)+
geom_point(aes(color = sind))+
geom_line(linetype = "dashed")+
labs(x = "j", y = expression("sorted importance index "*I[(j)]),
color = "Generating model")+
scale_color_brewer("Reds")
ggplot()+
aes(x = 1:20, y = sinc)+
geom_point(aes(color = sind))+
geom_line(linetype = "dashed")+
labs(x = "j", y = expression("sorted importance index "*I[(j)]),
color = "Generating model")+
scale_color_brewer("Reds")+
theme_minimal()
ggplot()+
aes(x = 1:20, y = sinc)+
geom_point(aes(color = sind))+
geom_line(linetype = "dashed")+
labs(x = "j", y = expression("sorted importance index "*I[(j)]),
color = "Generating model")+
theme_minimal()
ggplot()+
aes(x = 1:20, y = sinc)+
geom_point(aes(color = sind))+
geom_line(linetype = "dashed")+
labs(x = expression(j), y = expression("sorted importance index "*I[(j)]),
color = "Generating model")+
theme_minimal()
ggplot()+
aes(x = 1:20, y = sinc)+
geom_point(aes(color = sind, shape = sind))+
geom_line(linetype = "dashed")+
labs(x = expression(j), y = expression("sorted importance index "*I[(j)]),
color = "Generating model")+
theme_minimal()
ggplot()+
aes(x = 1:20, y = sinc, group = sind)+
geom_point(aes(color = sind, shape = sind))+
geom_line(linetype = "dashed")+
labs(x = expression(j), y = expression("sorted importance index "*I[(j)]),
color = "Generating model")+
theme_minimal()
ggplot()+
aes(x = 1:20, y = sinc)+
geom_point(aes(color = sind, shape = sind))+
geom_line(linetype = "dashed")+
labs(x = expression(j), y = expression("sorted importance index "*I[(j)]))+
theme_minimal()
ggplot()+
aes(x = 1:20, y = sinc)+
geom_point(aes(color = sind, shape = sind))+
geom_line(linetype = "dashed")+
labs(x = expression(j), y = expression("sorted importance index "*I[(j)]),
sind = "Generating model")+
theme_minimal()
sind
ggplot()+
aes(x = 1:20, y = sinc)+
geom_point(aes(color = sind, shape = sind), size = 1)+
geom_line(linetype = "dashed")+
labs(x = expression(j), y = expression("sorted importance index "*I[(j)]))+
theme_minimal()
ggplot()+
aes(x = 1:20, y = sinc)+
geom_point(aes(color = sind, shape = sind), size = 5)+
geom_line(linetype = "dashed")+
labs(x = expression(j), y = expression("sorted importance index "*I[(j)]))+
theme_minimal()
ggplot()+
aes(x = 1:20, y = sinc)+
geom_point(aes(color = sind, shape = sind), size = 5)+
geom_line(linetype = "dashed")+
labs(x = expression(j), y = expression("sorted importance index "*I[(j)]), color = "G", shape= "G")+
theme_minimal()
ggplot()+
aes(x = 1:20, y = sinc)+
geom_point(aes(color = sind, shape = sind), size = 5)+
geom_line(linetype = "dashed")+
labs(x = expression(j), y = expression("sorted importance index "*I[(j)]),
color = "Generating model?", shape= "Generating model?")+
theme_minimal()
ggplot()+
aes(x = 1:20, y = sinc)+
geom_point(aes(color = sind, shape = sind), size = 3)+
geom_line(linetype = "dashed")+
labs(x = expression(j), y = expression("sorted importance index "*I[(j)]),
color = "Generating model?", shape= "Generating model?")+
theme_minimal()
ggplot()+
aes(x = 1:20, y = sinc)+
geom_point(aes(color = sind, shape = sind), size = 2)+
geom_line(linetype = "dashed")+
labs(x = expression(j), y = expression("sorted importance index "*I[(j)]),
color = "Generating model?", shape= "Generating model?")+
theme_minimal()
ggplot()+
aes(x = 1:20, y = sinc)+
geom_point(aes(color = sind, shape = sind), size = 3)+
geom_line(linetype = "dashed")+
labs(x = expression(j), y = expression("sorted importance index "*I[(j)]),
color = "Generating model?", shape= "Generating model?")+
theme_minimal()
ggplot()+
aes(x = 1:20, y = sinc)+
geom_point(aes(color = sind, shape = sind), size = 3)+
geom_line(linetype = "dashed")+
labs(x = expression("Variable index (sorted by importance "*I[j]*")"),
y = expression("Importance "*(I[j])),
color = "Generating model?", shape= "Generating model?")+
theme_minimal()
graphics.off()
for (i in 1:50){
plot(1:i)
#add something here that requests mouse click to proceed
}
for (i in 1:5000){
plot(1:i)
#add something here that requests mouse click to proceed
}
kmeans()
kmeans
?kmeans
Sigma = matrix(c(1,0.75,0.1,
0.75,1,-0.25,
0.1,-0.25,1), nrow = 3)
X = MASS::mvrnorm(300, c(0,0,0), Sigma)
library(ggplot2)
p1 = ggplot()+
aes(x = X[,1], y = X[,2])+
geom_point(size = 0.5)+
labs(x = expression(X[1]), y = expression(X[2]))+
theme_classic()+
theme(axis.text = element_blank())
p2 = ggplot()+
aes(x = X[,1], y = X[,3])+
geom_point(size = 0.5)+
labs(x = expression(X[1]), y = expression(X[3]))+
theme_classic()+
theme(axis.text = element_blank())
p3 = ggplot()+
aes(x = X[,2], y = X[,3])+
geom_point(size = 0.5)+
labs(x = expression(X[2]), y = expression(X[3]))+
theme_classic()+
theme(axis.text = element_blank())
library(gridExtra)
grid.arrange(p1, p2, p3, nrow = 1)
pc = prcomp(X)
pc$rotation
xtable::xtable(pc$rotation[,-3])
load("/home/juank/Documents/Doctorado/Articulo-SMMR/2018.09.28/Source/Real Data/seed 2018/Real.RData")
library(ggplot2)
ggplot()+
aes(x = 1:30, y = sort(incidencias, decreasing = T)[1:30])+
geom_point(shape = 1)+
geom_line()+
geom_vline(aes(xintercept = 7), linetype="dashed", color = "Red")+
labs(x = expression("Variable index (sorted by importance "*I[j]*")"),
y = expression("Importance "*(I[j])))+
geom_text(aes(x = 6, y = 0.6, label = "cutoff value"), angle = 90, color = "Red")+
theme_minimal()
vars = order(incidencias, decreasing = T)[1:nvar_reduced]
imp = sort(incidencias, decreasing = T)[1:nvar_reduced]
power = rep(0, nrow(result))
nvar_reduced = 7
vars = order(incidencias, decreasing = T)[1:nvar_reduced]
imp = sort(incidencias, decreasing = T)[1:nvar_reduced]
power = rep(0, nrow(result))
for(r in 1:nrow(result)){
coef = abs(result$selected.coef[[r]][result$selected.vars[[r]]%in% vars])
if(length(coef)>0)
{
coef = coef/max(coef)
power[r] = sum(imp[vars %in% result$selected.vars[[r]]]*coef)/sum(imp)
}else{
power[r] = 0
}
}
id = order(power, decreasing = T)
b = which.max(power[id] + result$ccr[id])
df = data_frame(index = c(1:200, 1:200),
value = c(result$ccr[id], power[id]),
Measure = factor(rep(c("ccr", "power"), each = 200)) )
df = data.frame(index = c(1:200, 1:200),
value = c(result$ccr[id], power[id]),
Measure = factor(rep(c("ccr", "power"), each = 200)) )
ggplot(df)+
aes(x = index, y = value, group = Measure)+
geom_line(aes(linetype = Measure, color  = Measure))+
geom_point(aes(x = b, y = result$ccr[id][b], shape = "Best model"))+
geom_point(aes(x = b, y = power[id][b], shape = "Best model"))+
labs(shape = NULL,
x = "Model index (sorted by power)",
y = "Value")+
theme_minimal()
group.index = as.numeric(cluster.pca(data.train$x))
length(unique(group.index))
max(group.index)
included = rep(FALSE, length(group.index))
included[mC$selected.vars] = TRUE
included.groups = sort(unique(group.index[mC$selected.vars]))
df = NULL
for (gr in included.groups) {
var_in = sum(included[group.index==gr])
var_out = sum(!included[group.index==gr])
df = rbind(df,
data.frame(count = c(var_in, var_out),
type = c("included", "excluded"),
gr = rep(paste0("Group ", gr),2)) )
}
plot_gr  = ggplot(df)+
aes(x = "", y = count,
fill = type)+
geom_bar(stat = "identity")+
coord_flip()+
labs(y = "", fill = "Status", title = "Groupwise view")+
theme_minimal()+
theme(legend.position = "top")+
scale_fill_brewer(palette = "Reds")+
facet_wrap(~gr, ncol = 3)
# overall
plot_all = ggplot()+
aes(x = "", y = c(sum(included), sum(!included)),
fill = c("included", "excluded"))+
geom_bar(stat = "identity")+
coord_flip()+
labs(y = "Number of transcriptomes",
title = "Overall view")+
guides(fill = F)+
scale_fill_brewer(palette = "Reds")+
theme_minimal()
library(gridExtra)
grid.arrange(plot_gr, plot_all, heights = c(4,1))
setwd("~/Documents/Doctorado/Articulo-genetic-epidemiology/source/Real Data and other Figures")
load("Real.RData")
rm(z)
rm(lasRES)
rm(data.train)
save.image("Real.RData")
load("Real.RData")
ggplot()+
aes(x = 1:30, y = sort(incidencias, decreasing = T)[1:30])+
geom_point(shape = 1)+
geom_line()+
geom_vline(aes(xintercept = 7), linetype="dashed", color = "Red")+
labs(x = expression("Variable index (sorted by importance "*I[j]*")"),
y = expression("Importance "*(I[j])))+
geom_text(aes(x = 6, y = 0.6, label = "cutoff value"), angle = 90, color = "Red")+
theme_minimal()
nvar_reduced = 7
vars = order(incidencias, decreasing = T)[1:nvar_reduced]
imp = sort(incidencias, decreasing = T)[1:nvar_reduced]
power = rep(0, nrow(result))
for(r in 1:nrow(result)){
coef = abs(result$selected.coef[[r]][result$selected.vars[[r]]%in% vars])
if(length(coef)>0)
{
coef = coef/max(coef)
power[r] = sum(imp[vars %in% result$selected.vars[[r]]]*coef)/sum(imp)
}else{
power[r] = 0
}
}
id = order(power, decreasing = T)
b = which.max(power[id] + result$ccr[id])
df = data.frame(index = c(1:200, 1:200),
value = c(result$ccr[id], power[id]),
Measure = factor(rep(c("ccr", "power"), each = 200)) )
ggplot(df)+
aes(x = index, y = value, group = Measure)+
geom_line(aes(linetype = Measure, color  = Measure))+
geom_point(aes(x = b, y = result$ccr[id][b], shape = "Best model"))+
geom_point(aes(x = b, y = power[id][b], shape = "Best model"))+
labs(shape = NULL,
x = "Model index (sorted by power)",
y = "Value")+
theme_minimal()
group.index = as.numeric(cluster.pca(data.train$x))
length(unique(group.index))
